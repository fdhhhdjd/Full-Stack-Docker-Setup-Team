version: "3.7"

services:
###! Backend ###
  backend:
    container_name: backend
    depends_on:
      - postgresql
      - mongodb
      - redis
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./backend
    ports:
      - 5000:5000
    volumes:
      - /app/node_modules
      - ./backend:/app
    env_file:
      - .env
    command: npm run dev
    networks:
      - common

###! NoSql: MongoDB ###  
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGODB_URL: '${MONGODB_URL}'
      MONGO_USER: '${MONGO_USER}'
      MONGO_PASSWORD: '${MONGO_PASSWORD}'
    volumes:
      - ./backend/mongo-entrypoint:/docker-entrypoint-initdb.d
      - ./backend/data:/data/db
      - ./backend/mongoconfig:/data/configdb
    ports:
      - 27017:27017    
    env_file:
      - .env
    networks:
      - common

###! Redis ###  
  redis:
    image: redis:6.2
    restart: always
    environment:
      REDIS_PASSWORD: '${REDIS_PASSWORD}'
    env_file:
      - .env
    networks:
      - common 

##! Sql:Posgres ###
  postgresql:
    image: "postgres:latest"
    restart: unless-stopped
    volumes:
      - ./backend/db_data:/var/lib/postgresql/data
      - ./backend/db_data/init.sql:/docker-entrypoint-initdb.d/database.sql
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: '${POSTGRES_DB}'
    ports:
      - 5432:5432
    env_file:
      - .env   
    networks:
      - common  

###! Frontend ###
  client:
    depends_on:
      - backend
    stdin_open: true
    tty: true
    container_name: client
    build:
      dockerfile: Dockerfile.dev
      # dockerfile: Dockerfile
      context: ./client

    volumes:
      - /app/node_modules
      - ./client:/app
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - common 
###! WebServer:NGINX ###     
  nginx:
    image: nginx:1.21.3
    container_name: nginx
    depends_on:
      - backend
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "8084:80"
    networks: 
      - common 
      
###! Networks general ###
networks:
    common:
      driver: bridge
